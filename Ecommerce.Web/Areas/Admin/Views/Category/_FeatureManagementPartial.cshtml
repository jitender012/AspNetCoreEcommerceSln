@using eCommerce.Application.Features.FeatureCategoryFeatures.Dtos
@model FeatureCategoriesWithLinkStatusDto

@{
    var linkedCount = Model.Features.Count(f => f.IsLinked);
    var totalCount = Model.Features.Count;
}
<!-- Linked Features -->
<div class="col-md-6">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h6 class="mb-0">
            <i class="fas fa-link text-success me-2"></i>Linked Features
        </h6>
        <span class="badge bg-success">@linkedCount</span>
    </div>

    <div class="linked-features-list"
         data-category-id="@Model.FeatureCategoryId">
        @{
            var linkedFeatures = Model.Features.Where(f => f.IsLinked).ToList();
        }
        @if (linkedFeatures.Any())
        {
            <div class="list-group">
                @foreach (var feature in linkedFeatures)
                {
                    <div class="list-group-item d-flex justify-content-between align-items-center feature-item"
                         data-feature-name="@feature.FeatureName.ToLower()">
                        <div>
                            <i class="fas fa-check-circle text-success me-2"></i>
                            <span>
                                @feature.FeatureName
                                @(string.IsNullOrEmpty(feature.UnitSymbol) ? "" : $"({feature.UnitSymbol})")
                            </span>
                        </div>
                        <button type="button"
                                class="btn btn-sm btn-outline-danger"
                                onclick="unlinkFeature(@feature.FeatureId, '@feature.FeatureName', @Model.FeatureCategoryId)">
                            <i class="fas fa-unlink"></i>
                        </button>
                    </div>
                }
                <hr>
                <div class="d-flex justify-content-between">
                    <button type="button" class="btn btn-sm btn-outline-danger"
                            onclick="unlinkAllFeatures(@Model.FeatureCategoryId)">
                        <i class="fas fa-unlink me-1"></i>Unlink All
                    </button>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-3 text-muted">
                <i class="fas fa-inbox fa-2x mb-2"></i>
                <p class="small mb-0">No features linked yet</p>
            </div>
        }
    </div>
</div>

<!-- Available Features -->
<div class="col-md-6">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h6 class="mb-0">
            <i class="fas fa-plus-circle text-primary me-2"></i>Available Features
        </h6>
        <span class="badge bg-secondary">@(totalCount - linkedCount)</span>
    </div>
    <div class="available-features-list"
         data-category-id="@Model.FeatureCategoryId">
        @{
            var availableFeatures = Model.Features.Where(f => !f.IsLinked).ToList();
        }
        @if (availableFeatures.Any())
        {
            <div class="list-group">
                @foreach (var feature in availableFeatures)
                {
                    <div class="list-group-item d-flex justify-content-between align-items-center feature-item"
                         data-feature-name="@feature.FeatureName.ToLower()">
                        <div>
                            <i class="far fa-circle text-muted me-2"></i>
                            <span>
                                @feature.FeatureName
                                @(string.IsNullOrEmpty(feature.UnitSymbol) ? "" : $"({feature.UnitSymbol})")
                            </span>
                        </div>
                        <button type="button"
                                class="btn btn-sm btn-outline-success"
                                onclick="linkFeature(@feature.FeatureId, '@feature.FeatureName', @Model.FeatureCategoryId)">
                            <i class="fas fa-link"></i>
                        </button>
                    </div>
                }
                <hr>
                <div class="d-flex justify-content-between">
                    <button type="button" class="btn btn-sm btn-outline-success"
                            onclick="linkAllFeatures(@Model.FeatureCategoryId)">
                        <i class="fas fa-link me-1"></i>Link All
                    </button>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-3 text-muted">
                <i class="fas fa-check-double fa-2x mb-2 text-success"></i>
                <p class="small mb-0">All features linked!</p>
            </div>
        }
    </div>
</div>