@* @model List<ProductListVM>

@{
    ViewData["Title"] = "";
    Layout = "~/Areas/Seller/Views/Shared/_VendorLayout.cshtml";
}
<link href="~/lib/datatables.net-bs5/datatables.bootstrap5.min.css" rel="stylesheet" />
<!-- Display TempData messages -->
<div>
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["NotFound"] != null)
    {
        <div class="alert alert-warning">
            @TempData["NotFound"]
        </div>
    }

</div>

<div class="d-flex justify-content-between align-items-end mb-3">
    <div>
        <a href="@Url.Action("Dashboard", "Dashboard")" style=" color: #6ebb4a; font-size: 14px; font-weight: 600;">
            Home
            <i class="fas fa-angle-right" style="color: #c1cdc2;"></i>

        </a>
        <h4>
            Products
        </h4>
    </div>
    <div>
        <a href="@Url.Action("Create", "Product")" class="addNewBtn">
            <i class="bi bi-plus-circle"></i>
            Add New Product
        </a>
    </div>
</div>
<div class="table-div">
    <table class="table table-bordered table-hover w-100" id="myTable">
        <thead>
            <tr>
                <th> Image </th>
                <th> Product Id </th>
                <th> Product Name </th>
                <th> Price </th>
                <th> Category  Name
                <th> Variant Count </th>
                <th></th>
            </tr>
        </thead>


        @foreach (var item in Model)
        {
            <tr id="@item.ProductId">
                <td>
                    <img href="@Url.Content(item.Url)" height="50" width="50" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VariantCount)
                </td>


                <td style="text-align:center;vertical-align:middle">
                    <div class="btn-group">*@
                        @* <a href="@Url.Action("Details", "Product", new { id = item.ProductId })" class=" btn btn-outline-info"> Details</a> *@
                        @* <a href="@Url.Action("Edit", "Product", new { brandId = item.ProductId })" class=" btn btn-outline-info"> Edit</a> *@
                        @* <a href="#" class="delete-brand btn btn-outline-danger" name="brand_id" data-id="@item.ProductId">Delete</a> *@
                 @*    </div>
                </td>
            </tr>
        }

    </table>

</div>

<script src="~/lib/datatables/js/datatables.js"></script>
<script src="~/lib/datatables.net-bs5/datatables.bootstrap5.min.js"></script>
<script src="~/js/jquery code/adminjs/seller-product-index.js"></script>  *@
<style>
    .card-title {
        color: white;
    }
</style>
@{
    ViewData["Title"] = "My Products";
    Layout = "~/Areas/Seller/Views/Shared/_VendorLayout.cshtml";
}

@model List<ProductListVM>

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center flex-wrap">
                <div class="mb-2">
                   @*  <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/seller/dashboard" class="text-decoration-none">Dashboard</a></li>
                            <li class="breadcrumb-item active">Products</li>
                        </ol>
                    </nav> *@
                    <h1 class="h3 mb-0">My Products</h1>
                    <p class="text-muted mb-0">Manage your product catalog</p>
                </div>
                <div class="d-flex gap-2 mb-2">
                    <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#importModal">
                        <i class="fas fa-upload me-2"></i>Import Products
                    </button>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary" onclick="exportProducts()">
                            <i class="fas fa-download me-2"></i>Export
                        </button>
                        <button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split"
                                data-bs-toggle="dropdown"></button>
                        <ul class="dropdown-menu">
                            <li>
                                <a class="dropdown-item" href="#" onclick="exportProducts('csv')">
                                    <i class="fas fa-file-csv me-2"></i>Export as CSV
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="#" onclick="exportProducts('excel')">
                                    <i class="fas fa-file-excel me-2"></i>Export as Excel
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="#" onclick="exportProducts('pdf')">
                                    <i class="fas fa-file-pdf me-2"></i>Export as PDF
                                </a>
                            </li>
                        </ul>
                    </div>
                    <a href="/seller/product/create" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Add Product
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Total Products</h6>
                            <h3 class="mb-0" id="totalProducts">@Model.Count</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-shopping-bag fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Active Products</h6>
                            <h3 class="mb-0" id="activeProducts">@(Model.Count - 2)</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-check-circle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-warning text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Draft Products</h6>
                            <h3 class="mb-0" id="draftProducts">2</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-edit fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-info text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Total Variants</h6>
                            <h3 class="mb-0" id="totalVariants">@Model.Sum(p => p.VariantCount)</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-boxes fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control" id="searchInput" placeholder="Search products...">
                    </div>
                </div>
                <div class="col-md-2">
                    <select class="form-select" id="categoryFilter">
                        <option value="">All Categories</option>
                        <option value="Electronics">Electronics</option>
                        <option value="Clothing">Clothing</option>
                        <option value="Home & Garden">Home & Garden</option>
                        <option value="Sports">Sports</option>
                        <option value="Books">Books</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select class="form-select" id="statusFilter">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="draft">Draft</option>
                        <option value="out-of-stock">Out of Stock</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select class="form-select" id="sortBy">
                        <option value="name-asc">Name A-Z</option>
                        <option value="name-desc">Name Z-A</option>
                        <option value="price-asc">Price Low-High</option>
                        <option value="price-desc">Price High-Low</option>
                        <option value="date-desc">Newest First</option>
                        <option value="date-asc">Oldest First</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <div class="d-flex gap-1">
                        <button type="button" class="btn btn-outline-secondary" id="gridViewBtn" title="Grid View">
                            <i class="fas fa-th"></i>
                        </button>
                        <button type="button" class="btn btn-primary" id="listViewBtn" title="List View">
                            <i class="fas fa-list"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bulk Actions -->
    <div class="card mb-4" id="bulkActionsCard" style="display: none;">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <span class="fw-semibold">Bulk Actions:</span>
                    <span id="selectedCount" class="text-muted">0 items selected</span>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-success btn-sm" onclick="bulkAction('activate')">
                        <i class="fas fa-check me-1"></i>Activate
                    </button>
                    <button type="button" class="btn btn-warning btn-sm" onclick="bulkAction('draft')">
                        <i class="fas fa-edit me-1"></i>Draft
                    </button>
                    <button type="button" class="btn btn-info btn-sm" onclick="bulkAction('duplicate')">
                        <i class="fas fa-copy me-1"></i>Duplicate
                    </button>
                    <button type="button" class="btn btn-outline-secondary btn-sm" onclick="bulkAction('export')">
                        <i class="fas fa-download me-1"></i>Export Selected
                    </button>
                    <button type="button" class="btn btn-danger btn-sm" onclick="bulkAction('delete')">
                        <i class="fas fa-trash me-1"></i>Delete
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Products List -->
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">Products</h5>
            <div class="d-flex align-items-center gap-3">
                <small class="text-muted">
                    Showing <span id="showingCount">@Model.Count</span> of <span id="totalCount">@Model.Count</span> products
                </small>
            </div>
        </div>
        <div class="card-body p-0">
            <!-- List View (Default) -->
            <div id="listView">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th width="40">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="selectAll">
                                    </div>
                                </th>
                                <th width="80">Image</th>
                                <th>Product</th>
                                <th width="120">Category</th>
                                <th width="100">Price</th>
                                <th width="90">Variants</th>
                                <th width="100">Status</th>
                                <th width="100">Stock</th>
                                <th width="120">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="productsTableBody">
                            @foreach (var product in Model)
                            {
                                var randomStatus = new Random().Next(1, 4) == 1 ? "draft" : "active";
                                var randomStock = new Random().Next(0, 100);
                                var stockStatus = randomStock == 0 ? "out-of-stock" : randomStock <= 10 ? "low-stock" : "in-stock";

                                <tr data-product-id="@product.ProductId"
                                    data-category="@product.CategoryName"
                                    data-status="@randomStatus"
                                    data-stock="@stockStatus">
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input product-checkbox" type="checkbox"
                                                   value="@product.ProductId">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="product-image-placeholder bg-light rounded d-flex align-items-center justify-content-center"
                                             style="width: 60px; height: 60px;">
                                            <i class="fas fa-image text-muted"></i>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <h6 class="mb-1">@product.ProductName</h6>
                                            @if (!string.IsNullOrEmpty(product.Url))
                                            {
                                                <small class="text-muted">
                                                    <code>/@product.Url</code>
                                                    <a href="/@product.Url" target="_blank" class="text-decoration-none ms-1">
                                                        <i class="fas fa-external-link-alt"></i>
                                                    </a>
                                                </small>
                                            }
                                            <br>
                                            <small class="text-muted">ID: @product.ProductId.ToString().Substring(0, 8)...</small>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-secondary">@product.CategoryName</span>
                                    </td>
                                    <td>
                                        <span class="fw-bold text-primary">$@product.Price.ToString("F2")</span>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@product.VariantCount</span>
                                    </td>
                                    <td>
                                        @if (randomStatus == "active")
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">Draft</span>
                                        }
                                    </td>
                                    <td>
                                        @if (stockStatus == "out-of-stock")
                                        {
                                            <span class="badge bg-danger">Out of Stock</span>
                                        }
                                        else if (stockStatus == "low-stock")
                                        {
                                            <span class="badge bg-warning">Low (@randomStock)</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success">In Stock (@randomStock)</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <a href="/seller/products/@product.ProductId" class="btn btn-outline-info" title="View">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="/seller/products/@product.ProductId/edit" class="btn btn-outline-primary" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" class="btn btn-outline-success"
                                                    onclick="toggleProductStatus('@product.ProductId', '@randomStatus')"
                                                    title="@(randomStatus == "active" ? "Deactivate" : "Activate")">
                                                <i class="fas fa-@(randomStatus == "active" ? "toggle-on" : "toggle-off")"></i>
                                            </button>
                                            <div class="btn-group btn-group-sm">
                                                <button type="button" class="btn btn-outline-secondary dropdown-toggle"
                                                        data-bs-toggle="dropdown" title="More">
                                                    <i class="fas fa-ellipsis-v"></i>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <a class="dropdown-item" href="/seller/products/@product.ProductId/duplicate">
                                                            <i class="fas fa-copy me-2"></i>Duplicate
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="/seller/products/@product.ProductId/analytics">
                                                            <i class="fas fa-chart-bar me-2"></i>Analytics
                                                        </a>
                                                    </li>
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li>
                                                        <a class="dropdown-item text-danger" href="#"
                                                           onclick="deleteProduct('@product.ProductId')">
                                                            <i class="fas fa-trash me-2"></i>Delete
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Grid View -->
            <div id="gridView" style="display: none;">
                <div class="p-4">
                    <div class="row g-4" id="productsGridContainer">
                        @foreach (var product in Model)
                        {
                            var randomStatus = new Random().Next(1, 4) == 1 ? "draft" : "active";
                            var randomStock = new Random().Next(0, 100);
                            var stockStatus = randomStock == 0 ? "out-of-stock" : randomStock <= 10 ? "low-stock" : "in-stock";

                            <div class="col-xl-3 col-lg-4 col-md-6 product-card"
                                 data-product-id="@product.ProductId"
                                 data-category="@product.CategoryName"
                                 data-status="@randomStatus"
                                 data-stock="@stockStatus">
                                <div class="card h-100">
                                    <div class="position-relative">
                                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center"
                                             style="height: 200px;">
                                            <i class="fas fa-image fa-3x text-muted"></i>
                                        </div>
                                        <div class="position-absolute top-0 start-0 p-2">
                                            <div class="form-check">
                                                <input class="form-check-input product-checkbox" type="checkbox"
                                                       value="@product.ProductId">
                                            </div>
                                        </div>
                                        <div class="position-absolute top-0 end-0 p-2">
                                            @if (randomStatus == "active")
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">Draft</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="card-body d-flex flex-column">
                                        <h6 class="card-title text-dark">@product.ProductName</h6>
                                        <div class="mb-2">
                                            <span class="badge bg-secondary">@product.CategoryName</span>
                                            <span class="badge bg-info ms-1">@product.VariantCount variants</span>
                                        </div>
                                        <div class="mb-2">
                                            <span class="h5 text-primary mb-0">$@product.Price.ToString("F2")</span>
                                        </div>
                                        <div class="mb-3">
                                            @if (stockStatus == "out-of-stock")
                                            {
                                                <span class="badge bg-danger">Out of Stock</span>
                                            }
                                            else if (stockStatus == "low-stock")
                                            {
                                                <span class="badge bg-warning">Low Stock (@randomStock)</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">In Stock (@randomStock)</span>
                                            }
                                        </div>
                                        <div class="mt-auto">
                                            <div class="d-grid gap-2">
                                                <div class="btn-group">
                                                    <a href="/seller/products/@product.ProductId" class="btn btn-outline-info btn-sm">
                                                        <i class="fas fa-eye me-1"></i>View
                                                    </a>
                                                    <a href="/seller/products/@product.ProductId/edit" class="btn btn-outline-primary btn-sm">
                                                        <i class="fas fa-edit me-1"></i>Edit
                                                    </a>
                                                </div>
                                                <button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle"
                                                        data-bs-toggle="dropdown">
                                                    <i class="fas fa-ellipsis-h me-1"></i>More Actions
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <a class="dropdown-item" href="#"
                                                           onclick="toggleProductStatus('@product.ProductId', '@randomStatus')">
                                                            <i class="fas fa-toggle-@(randomStatus == "active" ? "off" : "on") me-2"></i>
                                                            @(randomStatus == "active" ? "Deactivate" : "Activate")
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="/seller/products/@product.ProductId/duplicate">
                                                            <i class="fas fa-copy me-2"></i>Duplicate
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="/seller/products/@product.ProductId/analytics">
                                                            <i class="fas fa-chart-bar me-2"></i>Analytics
                                                        </a>
                                                    </li>
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li>
                                                        <a class="dropdown-item text-danger" href="#"
                                                           onclick="deleteProduct('@product.ProductId')">
                                                            <i class="fas fa-trash me-2"></i>Delete
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            @if (!Model.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-shopping-bag fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No products found</h5>
                    <p class="text-muted">Start by adding your first product to build your catalog.</p>
                    <a href="/seller/products/add" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Add Your First Product
                    </a>
                </div>
            }
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.Any())
    {
        <nav aria-label="Products pagination" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item disabled">
                    <a class="page-link" href="#">Previous</a>
                </li>
                <li class="page-item active">
                    <a class="page-link" href="#">1</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">2</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">3</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>

<!-- Import Modal -->
<div class="modal fade" id="importModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Import Products</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="importFile" class="form-label">Choose file</label>
                    <input type="file" class="form-control" id="importFile" accept=".csv,.xlsx">
                </div>
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    <strong>Supported formats:</strong> CSV, Excel (.xlsx)
                    <br>
                    <a href="/templates/product-import-template.csv" class="alert-link">Download template</a>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="importProducts()">
                    <i class="fas fa-upload me-2"></i>Import
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .product-card {
        transition: transform 0.2s ease-in-out;
    }

        .product-card:hover {
            transform: translateY(-5px);
        }

    .card {
        transition: box-shadow 0.2s ease-in-out;
    }

        .card:hover {
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

    .btn-group-sm .btn {
        padding: 0.25rem 0.4rem;
    }

    .table td {
        vertical-align: middle;
    }

    .product-image-placeholder {
        transition: background-color 0.2s ease;
    }

        .product-image-placeholder:hover {
            background-color: #e9ecef !important;
        }

    .badge {
        font-size: 0.75em;
    }

    .table-responsive {
        border-radius: 0.375rem;
    }

    .form-check-input:checked {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>

<script>
    $(document).ready(function() {
        initializeTooltips();
        initializeFilters();
        initializeBulkActions();
        initializeViewToggle();
    });

    // Initialize tooltips
    function initializeTooltips() {
        $('[title]').tooltip();
    }

    // Initialize filters and search
    function initializeFilters() {
        $('#searchInput').on('input', function() {
            filterProducts();
        });

        $('#categoryFilter, #statusFilter, #sortBy').on('change', function() {
            filterProducts();
        });
    }

    // Filter products
    function filterProducts() {
        const searchTerm = $('#searchInput').val().toLowerCase();
        const categoryFilter = $('#categoryFilter').val();
        const statusFilter = $('#statusFilter').val();
        const sortBy = $('#sortBy').val();

        let visibleCount = 0;

        // Filter rows
        $('#productsTableBody tr, #productsGridContainer .product-card').each(function() {
            const $item = $(this);
            const productName = $item.find('h6').first().text().toLowerCase();
            const category = $item.data('category');
            const status = $item.data('status');

            let shouldShow = true;

            // Search filter
            if (searchTerm && !productName.includes(searchTerm)) {
                shouldShow = false;
            }

            // Category filter
            if (categoryFilter && category !== categoryFilter) {
                shouldShow = false;
            }

            // Status filter
            if (statusFilter && status !== statusFilter) {
                shouldShow = false;
            }

            if (shouldShow) {
                $item.show();
                visibleCount++;
            } else {
                $item.hide();
            }
        });

        // Update counts
        $('#showingCount').text(visibleCount);

        // Sort products (simplified for demo)
        if (sortBy) {
            // Implement sorting logic here
            console.log('Sorting by:', sortBy);
        }
    }

    // Initialize bulk actions
    function initializeBulkActions() {
        // Select all checkbox
        $('#selectAll').change(function() {
            $('.product-checkbox').prop('checked', $(this).is(':checked'));
            updateBulkActions();
        });

        // Individual checkboxes
        $(document).on('change', '.product-checkbox', function() {
            updateBulkActions();

            // Update select all checkbox
            const totalCheckboxes = $('.product-checkbox').length;
            const checkedCheckboxes = $('.product-checkbox:checked').length;
            $('#selectAll').prop('checked', totalCheckboxes === checkedCheckboxes);
        });
    }

    // Update bulk actions visibility
    function updateBulkActions() {
        const checkedCount = $('.product-checkbox:checked').length;
        $('#selectedCount').text(checkedCount + ' items selected');

        if (checkedCount > 0) {
            $('#bulkActionsCard').slideDown();
        } else {
            $('#bulkActionsCard').slideUp();
        }
    }

    // Initialize view toggle
    function initializeViewToggle() {
        $('#listViewBtn').click(function() {
            $(this).addClass('btn-primary').removeClass('btn-outline-primary');
            $('#gridViewBtn').addClass('btn-outline-secondary').removeClass('btn-primary');
            $('#listView').show();
            $('#gridView').hide();
            localStorage.setItem('productViewMode', 'list');
        });

        $('#gridViewBtn').click(function() {
            $(this).addClass('btn-primary').removeClass('btn-outline-secondary');
            $('#listViewBtn').addClass('btn-outline-primary').removeClass('btn-primary');
            $('#gridView').show();
            $('#listView').hide();
            localStorage.setItem('productViewMode', 'grid');
        });

        // Load saved view mode
        const savedViewMode = localStorage.getItem('productViewMode');
        if (savedViewMode === 'grid') {
            $('#gridViewBtn').click();
        }
    }

    // Toggle product status
    function toggleProductStatus(productId, currentStatus) {
        const newStatus = currentStatus === 'active' ? 'draft' : 'active';

        $.ajax({
            url: '/seller/api/products/' + productId + '/status',
            type: 'POST',
            data: { status: newStatus },
            success: function(response) {
                location.reload();
            },
            error: function() {
                showAlert('Failed to update product status.', 'error');
            }
        });
    }

    // Delete product
    function deleteProduct(productId) {
        if (confirm('Are you sure you want to delete this product? This action cannot be undone and will delete all variants.')) {
            $.ajax({
                url: '/seller/api/products/' + productId,
                type: 'DELETE',
                success: function(response) {
                    $(`[data-product-id="${productId}"]`).fadeOut(function() {
                        $(this).remove();
                        updateProductCounts();
                    });
                    showAlert('Product deleted successfully.', 'success');
                },
                error: function() {
                    showAlert('Failed to delete product.', 'error');
                }
            });
        }
    }

    // Bulk actions
    function bulkAction(action) {
        const selectedProducts = $('.product-checkbox:checked').map(function() {
            return $(this).val();
        }).get();

        if (selectedProducts.length === 0) {
            alert('Please select at least one product.');
            return;
        }

        let confirmMessage = '';
        let endpoint = '';

        switch(action) {
            case 'activate':
                confirmMessage = `Activate ${selectedProducts.length} product(s)?`;
                endpoint = '/seller/api/products/bulk/activate';
                break;
            case 'draft':
                confirmMessage = `Move ${selectedProducts.length} product(s) to draft?`;
                endpoint = '/seller/api/products/bulk/draft';
                break;
            case 'duplicate':
                confirmMessage = `Duplicate ${selectedProducts.length} product(s)?`;
                endpoint = '/seller/api/products/bulk/duplicate';
                break;
            case 'export':
                exportSelectedProducts(selectedProducts);
                return;
            case 'delete':
                confirmMessage = `Delete ${selectedProducts.length} product(s)? This action cannot be undone.`;
                endpoint = '/seller/api/products/bulk/delete';
                break;
        }

        if (confirm(confirmMessage)) {
            $.ajax({
                url: endpoint,
                type: 'POST',
                data: { productIds: selectedProducts },
                success: function(response) {
                    if (action === 'delete') {
                        selectedProducts.forEach(function(productId) {
                            $(`[data-product-id="${productId}"]`).fadeOut(function() {
                                $(this).remove();
                            });
                        });
                    } else {
                        location.reload();
                    }
                    showAlert(`Bulk ${action} completed successfully.`, 'success');
                    updateBulkActions();
                },
                error: function() {
                    showAlert(`Failed to perform bulk ${action}.`, 'error');
                }
            });
        }
    }

    // Export products
    function exportProducts(format = 'csv') {
        const params = new URLSearchParams({
            format: format,
            search: $('#searchInput').val(),
            category: $('#categoryFilter').val(),
            status: $('#statusFilter').val()
        });

        window.location.href = '/seller/api/products/export?' + params.toString();
    }

    // Export selected products
    function exportSelectedProducts(productIds) {
        const params = new URLSearchParams({
            format: 'csv',
            productIds: productIds
        });

        window.location.href = '/seller/api/products/export?' + params.toString();
    }

    // Import products
    function importProducts() {
        const fileInput = $('#importFile')[0];
        const file = fileInput.files[0];

        if (!file) {
            alert('Please select a file to import.');
            return;
        }

        const formData = new FormData();
        formData.append('file', file);

        $.ajax({
            url: '/seller/api/products/import',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function(response) {
                $('#importModal').modal('hide');
                showAlert(`Successfully imported ${response.count} products.`, 'success');
                setTimeout(() => location.reload(), 2000);
            },
            error: function(xhr) {
                const error = xhr.responseJSON?.message || 'Failed to import products.';
                showAlert(error, 'error');
            }
        });
    }

    // Update product counts
    function updateProductCounts() {
        const totalProducts = $('.product-checkbox').length;
        const activeProducts = $('[data-status="active"]').length;
        const draftProducts = $('[data-status="draft"]').length;

        $('#totalProducts').text(totalProducts);
        $('#activeProducts').text(activeProducts);
        $('#draftProducts').text(draftProducts);
        $('#totalCount').text(totalProducts);
    }

    // Show alert function
    function showAlert(message, type) {
        const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
        const iconClass = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle';

        const alert = $(`
            <div class="alert ${alertClass} alert-dismissible fade show position-fixed"
                 style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;" role="alert">
                <i class="fas ${iconClass} me-2"></i>${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `);

        $('body').append(alert);

        setTimeout(function() {
            alert.fadeOut(function() {
                $(this).remove();
            });
        }, 5000);
    }

    // Quick actions from keyboard shortcuts
    $(document).keydown(function(e) {
        // Ctrl+A to select all
        if (e.ctrlKey && e.keyCode === 65 && e.target.tagName !== 'INPUT') {
            e.preventDefault();
            $('#selectAll').prop('checked', true).trigger('change');
        }

        // Escape to clear selection
        if (e.keyCode === 27) {
            $('#selectAll').prop('checked', false);
            $('.product-checkbox').prop('checked', false);
            updateBulkActions();
        }

        // Ctrl+N for new product
        if (e.ctrlKey && e.keyCode === 78) {
            e.preventDefault();
            window.location.href = '/seller/products/add';
        }
    });

    // Auto-refresh data every 30 seconds (optional)
    setInterval(function() {
        // Update stock levels and status indicators
        // This would typically make an AJAX call to get updated data
        // For demo purposes, we'll just update the timestamp
        console.log('Auto-refresh: ' + new Date().toLocaleTimeString());
    }, 30000);

    // Print functionality
      
    // Advanced search functionality
    function showAdvancedSearch() {
        // This would open a modal with more search options
        alert('Advanced search functionality would be implemented here.');
    }

    // Product analytics preview
    function showQuickAnalytics(productId) {
        // This would show a quick analytics popup
        alert(`Quick analytics for product ${productId} would be shown here.`);
    }

    // Drag and drop for bulk upload
    $('#importModal .modal-body').on('dragover', function(e) {
        e.preventDefault();
        $(this).addClass('bg-light');
    });

    $('#importModal .modal-body').on('dragleave', function(e) {
        e.preventDefault();
        $(this).removeClass('bg-light');
    });

    $('#importModal .modal-body').on('drop', function(e) {
        e.preventDefault();
        $(this).removeClass('bg-light');

        const files = e.originalEvent.dataTransfer.files;
        if (files.length > 0) {
            $('#importFile')[0].files = files;
        }
    });

    // Initialize on page load
    $(window).on('load', function() {
        // Hide loading spinners, show content
        $('.loading').fadeOut();

        // Set focus on search input
        $('#searchInput').focus();

        // Load any saved filters from localStorage
        const savedFilters = JSON.parse(localStorage.getItem('productFilters') || '{}');
        if (savedFilters.category) $('#categoryFilter').val(savedFilters.category);
        if (savedFilters.status) $('#statusFilter').val(savedFilters.status);
        if (savedFilters.sort) $('#sortBy').val(savedFilters.sort);

        // Apply saved filters
        if (Object.keys(savedFilters).length > 0) {
            filterProducts();
        }
    });

    // Save filters to localStorage when changed
    $('#categoryFilter, #statusFilter, #sortBy').on('change', function() {
        const filters = {
            category: $('#categoryFilter').val(),
            status: $('#statusFilter').val(),
            sort: $('#sortBy').val()
        };
        localStorage.setItem('productFilters', JSON.stringify(filters));
    });
</script>