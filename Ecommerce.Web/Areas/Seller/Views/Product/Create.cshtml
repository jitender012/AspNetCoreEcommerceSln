@model SellerCreateProductVM

@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Seller/Views/Shared/_VendorLayout.cshtml";
}
<style>
    /* Match Bootstrap's form-select style */
    .select2-container--bootstrap-5 {
        width: 100% !important;
    }

        .select2-container--bootstrap-5 .select2-selection {
            border: 1px solid #dee2e6 !important;
            border-radius: 0.2rem !important;
            font-size: .875rem;
            padding: .95rem .85rem !important;
            display: flex !important;
            align-items: center !important;
            background-color: #fff;
        }

        .select2-container--bootstrap-5 .select2-selection__clear {
            font-size: 14px !important;
            color: #6c757d !important;
            margin-right: 10px !important;
            margin-left: -5px !important;
        }

</style>
<link href="https://unpkg.com/filepond/dist/filepond.css" rel="stylesheet" />
<link href="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css"
      rel="stylesheet" />
@* <link href="~/lib/filepond/filepond.css" rel="stylesheet" />
<script src="~/lib/filepond/filepond.js"></script> *@
<script src="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js"></script>

<script src="https://unpkg.com/filepond/dist/filepond.min.js"></script>

<script src="https://unpkg.com/jquery-filepond/filepond.jquery.js"></script>


<link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>


<h4>Create Product</h4>
<hr />

<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>


    <p class="d-inline-flex gap-1 ">
        <div class="crfrm" type="button" data-bs-toggle="collapse" data-bs-target="#basicDetails" aria-expanded="false" aria-controls="basicDetails">
            Basic Details
        </div>
    </p>

    <div class="collapse show " id="basicDetails">
        <div class="create-form">
            <div class="row">
                <div class="form-group py-1 col-12 col-md-6 col-lg-4">
                    @Html.LabelFor(model => model.ProductName, "Product Name", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", placeholder = "Enter product name" })
                    @Html.ValidationMessageFor(m => m.ProductName, null, new { @class = "text-danger" })
                </div>

                <div class="form-group py-1 col-12 col-md-6 col-lg-4">
                    <label class="control-label d-block" for="BrandId">Brand</label>
                    <select id="brandDropdown" asp-for="BrandId" class="form-control select2">
                        <option value="">-- Select Brand --</option>
                        @foreach (var brand in ViewBag.BrandList)
                        {
                            <option value="@brand.Value">@brand.Text</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(m => m.BrandId, null, new { @class = "text-danger" })
                </div>

                <div class="form-group py-1  col-12 col-md-6 col-lg-4">
                    @Html.LabelFor(model => model.Price, "Price", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Price, new { @class = "form-control", placeholder = "Enter Price" })
                    @Html.ValidationMessageFor(m => m.Price, null, new { @class = "text-danger" })
                </div>

                <div class="form-group py-1  col-12 col-md-6 col-lg-4">
                    @Html.LabelFor(model => model.ProductVariant!.SKU, "SKU", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.ProductVariant!.SKU, new { @class = "form-control", placeholder = "Enter SKU" })
                    @Html.ValidationMessageFor(m => m.ProductVariant!.SKU, null, new { @class = "text-danger" })
                </div>

                <div class="form-group py-1 col-12 col-md-6 col-lg-4">
                    @Html.LabelFor(model => model.ProductVariant!.Quantity, "Quantity", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.ProductVariant!.Quantity, new { @class = "form-control", placeholder = "Enter Quantity" })
                    @Html.ValidationMessageFor(m => m.ProductVariant!.Quantity, null, new { @class = "text-danger" })
                </div>

                <div class="form-group py-1  col-12 col-md-6 col-lg-4">
                    <label class="control-label d-block" for="CategoryId">Category</label>
                    <select id="categoryDropdown" asp-for="CategoryId" class="form-control">
                        <option value="">-- Select Category --</option>
                        @foreach (var category in ViewBag.CategoryList)
                        {
                            <option value="@category.Value">@category.Text</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(m => m.CategoryId, null, new { @class = "text-danger" })
                </div>

                <div class="form-group py-1 col-12 col-md-6 col-lg-4">
                    @Html.LabelFor(model => model.ProductVariant!.IsActive, "Is Active", new { @class = "control-label" })
                    @Html.EditorFor(model => model.ProductVariant!.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.ProductVariant!.IsActive, null, new { @class = "text-danger" })
                </div>

                <div class="form-group py-1  col-12 col-md-6 col-lg-4">
                    @Html.LabelFor(model => model.Description, "Description", new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.Description, new
                        {
                            @class = "form-control",
                            placeholder = "Enter Description",
                            rows = "1",
                            style = "resize: none; overflow: hidden; height: auto"
                        })
                    @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <p class="d-inline-flex gap-1 ">
        <div class="crfrm" type="button" data-bs-toggle="collapse" data-bs-target="#advanceDetails" aria-expanded="false" aria-controls="advanceDetails">
            Advance Details
        </div>
    </p>
    <div class="collapse" id="advanceDetails">
        <div class="frm">
            <div class="row" id="additionalDetails">
            </div>
        </div>
    </div>

    <p class="d-inline-flex gap-1 ">
        <div class="crfrm" type="button" data-bs-toggle="collapse" data-bs-target="#add-images" aria-expanded="false" aria-controls="add-images">
            Image
        </div>
    </p>
    <div class="collapse " id="add-images">
        <div class="frm">
            <div class="row" id="image-row">
                <div class="d-flex justify-content-evenly">
                   

                </div>
            </div>
        </div>
    </div>


    <div class=" details-col">
        <div class="form-group my-2">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</form>


<div>
    <a asp-action="Index">Back to List</a>
</div>
<input type="file" name="ProductImages" id="productImages" accept="image/*" multiple />
<div id="imagePreviewContainer"></div>

<script>
    const imageInput = document.getElementById('productImages');
    const imagePreviewContainer = document.getElementById('imagePreviewContainer');
    const maxFiles = 5;

    imageInput.addEventListener('change', function(event){
        const selectedFiles = event.target.files;

        imagePreviewContainer.innerHTML='';
         if (selectedFiles.length > maxFiles) {
            alert(`Max ${maxFiles} images allowed.`);
            imageInput.value = ''; // Clear selected files
            return;
        }
        for(let i = 0; i < selectedFiles.length; i++){
            const file = selectedFiles[i];

             if(file.type.startsWith('image/')){
                const reader = new FileReader();

                reader.onload = function(e){
                    const imgElement = document.createElement('img');
                    imgElement.src = e.target.result;
                    imgElement.alt = file.name;
                    imgElement.style.maxWidth = '200px'; // Adjust as needed
                    imgElement.style.margin = '5px'; // Adjust as needed
                    imagePreviewContainer.appendChild(imgElement);
                }
                 reader.readAsDataURL(file);
             } else {
                console.warn(`File ${file.name} is not an image.`);
             }
        }
    })

    $(document).ready(
        function () {
            $("#brandDropdown").select2({
                theme: 'bootstrap-5',
                tags: true,
                placeholder: "Select or add a brand",
                allowClear: true
            });
        }
    )
    $(document).ready(
        function () {
            $("#categoryDropdown").select2({
                theme: 'bootstrap-5',
                placeholder: "Select or add a brand",
                allowClear: true
            });

            $('#categoryDropdown').change(function () {
                let categoryId = $(this).val();

            if (categoryId) {
                    $.ajax({
                        url: "/Seller/Product/GetFeatureCategoriesWithFeatures",
                        type: "GET",
                        data: { categoryId: categoryId },
                            success: function (response)
                            {
                                    console.log(response);
                                var additionalDetails = $('#additionalDetails');
                                additionalDetails.empty();
                                $.each(response, function (i, category) {

                                    additionalDetails.append(`<h4 style="margin-bottom:0; margin-top:10px;">${category.name}</h4>`);

                                    $.each(category.productFeatures, function (j, feature) {
                                        additionalDetails.append(`
                                            <div class="form-group py-1 col-12 col-md-6 col-lg-4">
                                                <label class="control-label" for="${feature.name}">${feature.name}</label>
                                                <input type="text" name="${feature.name}" class="form-control"/>
                                            </div>
                                        `);
                                    });
                            });
                        },
                        error: function () {
                            alert("Error fetching feature categories.");
                        }
                    });
                }
            });
        }
    )

    $(document).ready(function () {
        $("#ImageFile").change(function () {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#imagePreview').attr('src', e.target.result);
                $('#imagePreview').show();
            }
            reader.readAsDataURL(this.files[0]);
        });
    });
</script>